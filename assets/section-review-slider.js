"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_setPrototypeOf(t,e)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var t,e=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(t=_getPrototypeOf(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function _possibleConstructorReturn(t,e){if(e&&("object"===_typeof(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t)}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _wrapNativeSuper(t){var r="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(t){if(null===t||!_isNativeFunction(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return _construct(t,arguments,_getPrototypeOf(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(e,t)})(t)}function _construct(t,e,r){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(t,e,r){var n=[null];n.push.apply(n,e);e=new(Function.bind.apply(t,n));return r&&_setPrototypeOf(e,r.prototype),e}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}function _isNativeFunction(t){return-1!==Function.toString.call(t).indexOf("[native code]")}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}!function n(o,i,u){function c(e,t){if(!i[e]){if(!o[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(s)return s(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}r=i[e]={exports:{}},o[e][0].call(r.exports,function(t){return c(o[e][1][t]||t)},r,r.exports,n,o,i,u)}return i[e].exports}for(var s="function"==typeof require&&require,t=0;t<u.length;t++)c(u[t]);return c}({1:[function(t,e,r){customElements.get("s-review-slider")||customElements.define("s-review-slider",function(){_inherits(e,_wrapNativeSuper(HTMLElement));var t=_createSuper(e);function e(){return _classCallCheck(this,e),t.call(this)}return _createClass(e,[{key:"connectedCallback",value:function(){this.initSlider(),"true"==this.getAttribute("data-slider_apply")&&this.querySelectorAll(".s-review-slider__review").forEach(function(t){return t.classList.add("full-height")})}},{key:"initSlider",value:function(){this.speed=this.getAttribute("data-speed"),this.apply="true"!=this.getAttribute("data-slider_apply"),this.settings={prevNextButtons:!1,pageDots:!1,cellAlign:"left",contain:!0,draggable:!0,watchCSS:this.apply},"false"!=this.speed&&(this.settings.autoPlay=+this.speed),this.slider=new Flickity(this.querySelector(".s-review-slider__slider"),this.settings)}}]),e}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2VjdGlvbi1yZXZpZXctc2xpZGVyLmpzIiwic2VjdGlvbi1yZXZpZXctc2xpZGVyLmpzIl0sIm5hbWVzIjpbInIiLCJlIiwibiIsInQiLCJvIiwiaSIsImYiLCJjIiwicmVxdWlyZSIsInUiLCJhIiwiRXJyb3IiLCJjb2RlIiwicCIsImV4cG9ydHMiLCJjYWxsIiwibGVuZ3RoIiwiMSIsIm1vZHVsZSIsImN1c3RvbUVsZW1lbnRzIiwiZ2V0IiwiZGVmaW5lIiwiX2luaGVyaXRzIiwiU1Jldmlld1NsaWRlciIsIl93cmFwTmF0aXZlU3VwZXIiLCJIVE1MRWxlbWVudCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImluaXRTbGlkZXIiLCJnZXRBdHRyaWJ1dGUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImNsYXNzTGlzdCIsImFkZCIsInNwZWVkIiwiYXBwbHkiLCJzZXR0aW5ncyIsInByZXZOZXh0QnV0dG9ucyIsInBhZ2VEb3RzIiwiY2VsbEFsaWduIiwiY29udGFpbiIsImRyYWdnYWJsZSIsIndhdGNoQ1NTIiwiYXV0b1BsYXkiLCJzbGlkZXIiLCJGbGlja2l0eSIsInF1ZXJ5U2VsZWN0b3IiXSwibWFwcGluZ3MiOiJxM0dBQUEsQ0FBQSxTQUFBQSxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBQUEsR0FBQSxDQUFBSixFQUFBRyxHQUFBLENBQUEsR0FBQSxDQUFBSixFQUFBSSxHQUFBLENBQUEsSUFBQUUsRUFBQSxZQUFBLE9BQUFDLFNBQUFBLFFBQUEsR0FBQSxDQUFBRixHQUFBQyxFQUFBLE9BQUFBLEVBQUFGLEVBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQUksRUFBQSxPQUFBQSxFQUFBSixFQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFLLEVBQUEsSUFBQUMsTUFBQSx1QkFBQU4sRUFBQSxHQUFBLEdBQUFPLEtBQUEsbUJBQUFGLENBQUEsQ0FBQUcsRUFBQVgsRUFBQUcsR0FBQSxDQUFBUyxRQUFBLEVBQUEsRUFBQWIsRUFBQUksR0FBQSxHQUFBVSxLQUFBRixFQUFBQyxRQUFBLFNBQUFkLEdBQUEsT0FBQUksRUFBQUgsRUFBQUksR0FBQSxHQUFBTCxJQUFBQSxDQUFBLENBQUEsRUFBQWEsRUFBQUEsRUFBQUMsUUFBQWQsRUFBQUMsRUFBQUMsRUFBQUMsQ0FBQSxDQUFBLENBQUEsT0FBQUQsRUFBQUcsR0FBQVMsT0FBQSxDQUFBLElBQUEsSUFBQUwsRUFBQSxZQUFBLE9BQUFELFNBQUFBLFFBQUFILEVBQUEsRUFBQUEsRUFBQUYsRUFBQWEsT0FBQVgsQ0FBQSxHQUFBRCxFQUFBRCxFQUFBRSxFQUFBLEVBQUEsT0FBQUQsQ0FBQSxFQUFBLENBQUFhLEVBQUEsQ0FBQSxTQUFBVCxFQUFBVSxFQUFBSixHQ0FBSyxlQUFBQyxJQUFBLGlCQUFBLEdBRUFELGVBQUFFLE9BQUEsa0JBQUEsV0FBQUMsVUFBQUMsRUE0QkFDLGlCQTVCQUMsV0FBQSxDQUFBLEVBQUEsSUFBQUMsRUFBQUMsYUFBQUosQ0FBQSxFQUNBLFNBQUFBLElBQUEsT0FBQUssZ0JBQUFDLEtBQUFOLENBQUEsRUFBQUcsRUFBQVgsS0FBQWMsSUFBQSxDQUVBLENBeUJBLE9BekJBQyxhQUFBUCxFQUFBLENBQUEsQ0FBQVEsSUFBQSxvQkFBQUMsTUFFQSxXQUNBSCxLQUFBSSxXQUFBLEVBQ0EsUUFBQUosS0FBQUssYUFBQSxtQkFBQSxHQUNBTCxLQUFBTSxpQkFBQSwwQkFBQSxFQUFBQyxRQUFBLFNBQUFuQyxHQUFBLE9BQUFBLEVBQUFvQyxVQUFBQyxJQUFBLGFBQUEsQ0FBQSxDQUFBLENBRUEsQ0FBQSxFQUFBLENBQUFQLElBQUEsYUFBQUMsTUFFQSxXQUNBSCxLQUFBVSxNQUFBVixLQUFBSyxhQUFBLFlBQUEsRUFDQUwsS0FBQVcsTUFBQSxRQUFBWCxLQUFBSyxhQUFBLG1CQUFBLEVBRUFMLEtBQUFZLFNBQUEsQ0FDQUMsZ0JBQUEsQ0FBQSxFQUNBQyxTQUFBLENBQUEsRUFDQUMsVUFBQSxPQUNBQyxRQUFBLENBQUEsRUFDQUMsVUFBQSxDQUFBLEVBQ0FDLFNBQUFsQixLQUFBVyxLQUNBLEVBRUEsU0FBQVgsS0FBQVUsUUFBQVYsS0FBQVksU0FBQU8sU0FBQSxDQUFBbkIsS0FBQVUsT0FFQVYsS0FBQW9CLE9BQUEsSUFBQUMsU0FBQXJCLEtBQUFzQixjQUFBLDBCQUFBLEVBQUF0QixLQUFBWSxRQUFBLENBQ0EsQ0FBQSxFQUFBLEVBQUFsQixDQUFBLEVBNUJBLENBNkJBLENDSUEsRUFBRSxHQUFHLEVBQUUsR0ZuQ1AsQ0FBQVYsRUFBQSIsImZpbGUiOiJzZWN0aW9uLXJldmlldy1zbGlkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoJ3MtcmV2aWV3LXNsaWRlcicpKSB7XHJcblxyXG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgncy1yZXZpZXctc2xpZGVyJywgY2xhc3MgU1Jldmlld1NsaWRlciBleHRlbmRzIEhUTUxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xyXG4gICAgICB0aGlzLmluaXRTbGlkZXIoKVxyXG4gICAgICB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1zbGlkZXJfYXBwbHknKSA9PSAndHJ1ZSdcclxuICAgICAgICA/IHRoaXMucXVlcnlTZWxlY3RvckFsbCgnLnMtcmV2aWV3LXNsaWRlcl9fcmV2aWV3JykuZm9yRWFjaCgoZSkgPT4gZS5jbGFzc0xpc3QuYWRkKCdmdWxsLWhlaWdodCcpKVxyXG4gICAgICAgIDogZmFsc2VcclxuICAgIH1cclxuXHJcbiAgICBpbml0U2xpZGVyKCkge1xyXG4gICAgICB0aGlzLnNwZWVkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3BlZWQnKVxyXG4gICAgICB0aGlzLmFwcGx5ID0gKHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXNsaWRlcl9hcHBseScpID09ICd0cnVlJyA/IGZhbHNlIDogdHJ1ZSlcclxuXHJcbiAgICAgIHRoaXMuc2V0dGluZ3MgPSB7XHJcbiAgICAgICAgcHJldk5leHRCdXR0b25zOiBmYWxzZSxcclxuICAgICAgICBwYWdlRG90czogZmFsc2UsXHJcbiAgICAgICAgY2VsbEFsaWduOiAnbGVmdCcsXHJcbiAgICAgICAgY29udGFpbjogdHJ1ZSxcclxuICAgICAgICBkcmFnZ2FibGU6IHRydWUsXHJcbiAgICAgICAgd2F0Y2hDU1M6IHRoaXMuYXBwbHlcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5zcGVlZCA9PSAnZmFsc2UnID8gZmFsc2UgOiB0aGlzLnNldHRpbmdzLmF1dG9QbGF5ID0gK3RoaXMuc3BlZWQ7XHJcblxyXG4gICAgICB0aGlzLnNsaWRlciA9IG5ldyBGbGlja2l0eSh0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLXJldmlldy1zbGlkZXJfX3NsaWRlcicpLCB0aGlzLnNldHRpbmdzKVxyXG4gICAgfVxyXG4gIH0pXHJcblxyXG59IiwiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG5pZiAoIWN1c3RvbUVsZW1lbnRzLmdldCgncy1yZXZpZXctc2xpZGVyJykpIHtcclxuXHJcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdzLXJldmlldy1zbGlkZXInLCBjbGFzcyBTUmV2aWV3U2xpZGVyIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgIHN1cGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XHJcbiAgICAgIHRoaXMuaW5pdFNsaWRlcigpXHJcbiAgICAgIHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXNsaWRlcl9hcHBseScpID09ICd0cnVlJ1xyXG4gICAgICAgID8gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucy1yZXZpZXctc2xpZGVyX19yZXZpZXcnKS5mb3JFYWNoKChlKSA9PiBlLmNsYXNzTGlzdC5hZGQoJ2Z1bGwtaGVpZ2h0JykpXHJcbiAgICAgICAgOiBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIGluaXRTbGlkZXIoKSB7XHJcbiAgICAgIHRoaXMuc3BlZWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1zcGVlZCcpXHJcbiAgICAgIHRoaXMuYXBwbHkgPSAodGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtc2xpZGVyX2FwcGx5JykgPT0gJ3RydWUnID8gZmFsc2UgOiB0cnVlKVxyXG5cclxuICAgICAgdGhpcy5zZXR0aW5ncyA9IHtcclxuICAgICAgICBwcmV2TmV4dEJ1dHRvbnM6IGZhbHNlLFxyXG4gICAgICAgIHBhZ2VEb3RzOiBmYWxzZSxcclxuICAgICAgICBjZWxsQWxpZ246ICdsZWZ0JyxcclxuICAgICAgICBjb250YWluOiB0cnVlLFxyXG4gICAgICAgIGRyYWdnYWJsZTogdHJ1ZSxcclxuICAgICAgICB3YXRjaENTUzogdGhpcy5hcHBseVxyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnNwZWVkID09ICdmYWxzZScgPyBmYWxzZSA6IHRoaXMuc2V0dGluZ3MuYXV0b1BsYXkgPSArdGhpcy5zcGVlZDtcclxuXHJcbiAgICAgIHRoaXMuc2xpZGVyID0gbmV3IEZsaWNraXR5KHRoaXMucXVlcnlTZWxlY3RvcignLnMtcmV2aWV3LXNsaWRlcl9fc2xpZGVyJyksIHRoaXMuc2V0dGluZ3MpXHJcbiAgICB9XHJcbiAgfSlcclxuXHJcbn1cbn0se31dfSx7fSxbMV0pXG5cbiJdfQ==
