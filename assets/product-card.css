form {
  display: none;
}

.card {
  min-height: 300px;
  height: 100%;
  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  border-radius: 4px;
  transition: 0.2s;
}
.card:hover {
  box-shadow: 4px 8px 16px rgba(8, 7, 7, 0.2);
}
.card__image__wrapper {
  width: 100%;
  overflow: hidden;
  cursor: pointer;
}
.card__image__wrapper img {
  width: 100%;
  height: 100%;
  transition: 0.2s;
  object-fit: cover;
  transform: scale(1);
}
.card__image__wrapper img:hover {
  transition: 0.2s;
  transform: scale(1.1);
}
.card__bottom {
  display: flex;
  flex-direction: column;
  flex: 1 0 auto;
  padding: 10px;
}
.card__bottom__type {
  text-transform: uppercase;
  color: darkgrey;
  letter-spacing: 1px;
  margin-bottom: 7px;
  font-size: 14px;
}
.card__bottom__price {
  font-weight: 600;
  font-size: 20px;
  color: #606060;
  margin-bottom: 7px;
}
.card__bottom__title {
  margin-bottom: 7px;
  font-weight: 500;
  font-size: 18px;
  line-height: 150%;
  color: #414141;
  text-decoration: none;
  height: -webkit-fill-available;
}
.card__bottom__title:hover {
  color: #ffb138;
}
.card__bottom__rating svg {
  width: 96px;
  margin-bottom: 7px;
}
.card__bottom__rating svg path {
  fill: #ffb138;
  stroke: #ffb138;
}
.card .product-card__content_add {
  display: block;
  width: 100%;
  font-weight: 400;
  font-size: 17px;
  color: #57a146;
  padding: 10px;
  text-align: center;
  border: 1px solid #57a146;
  border-radius: 4px;
  cursor: pointer;
  transition: 0.2s;
  margin-top: auto;
}
.card .product-card__content_add:hover {
  border: 1px solid #ffb138;
  background-color: #ffb138;
  color: #fff;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtY2FyZC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBHQTtFQUNFOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0VBQ0U7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7O0FBQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUNBO0VBQ0U7RUFDQTs7QUFLTjtFQUNFO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBQ0E7RUFDRTs7QUFLRjtFQUNFO0VBQ0E7O0FBRUE7RUFDRTtFQUNBOztBQU1SO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0VBQ0U7RUFDQTtFQUNBIiwiZmlsZSI6InByb2R1Y3QtY2FyZC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAucHJvZHVjdC1jYXJkIHtcclxuLy8gICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMHB4IDRweCAxMnB4O1xyXG4vLyAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgIGhlaWdodDogMTAwJTtcclxuLy8gICBmb3JtIHtcclxuLy8gICAgIGRpc3BsYXk6IG5vbmU7XHJcbi8vICAgfVxyXG5cclxuLy8gICAmX193cmFwcGVyIHtcclxuLy8gICAgIGhlaWdodDogMTAwJTtcclxuLy8gICB9XHJcblxyXG4vLyAgICZfX2ltYWdlIHtcclxuICAgIC8vIHdpZHRoOiAxMDAlO1xyXG4gICAgLy8gb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIC8vIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbi8vICAgICBpbWcge1xyXG4vLyAgICAgICB3aWR0aDogMTAwJTtcclxuLy8gICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4vLyAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuLy8gICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuLy8gICAgICAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuM3M7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgJjpob3ZlciB7XHJcbi8vICAgICAgIGltZyB7XHJcbi8vICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4vLyAgICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAwLjNzO1xyXG4vLyAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG5cclxuLy8gICAmX19jb250ZW50IHtcclxuLy8gICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbi8vICAgICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbi8vICAgICAmX3R5cGUge1xyXG4vLyAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4vLyAgICAgICBjb2xvcjogZGFya2dyZXk7XHJcbi8vICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgJl90aXRsZSB7XHJcbi8vICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuLy8gICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuLy8gICAgICAgY29sb3I6ICM0OTQ5NDk7XHJcbi8vICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuLy8gICAgICAgbWFyZ2luLXRvcDogNHB4O1xyXG4vLyAgICAgICBmbGV4LWdyb3c6IDE7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgJl9wcmljZSB7XHJcbi8vICAgICAgIGZvbnQtc2l6ZTogMjJweDtcclxuLy8gICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgJl9tYWluIHtcclxuLy8gICAgICAgcGFkZGluZzogMjBweDtcclxuLy8gICAgICAgZGlzcGxheTogZmxleDtcclxuLy8gICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbi8vICAgICAgIHN2ZyB7XHJcbi8vICAgICAgICAgd2lkdGg6IDk2cHg7XHJcbi8vICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbi8vICAgICAgICAgcGF0aCB7XHJcbi8vICAgICAgICAgICBmaWxsOiAjZmZiMTM4O1xyXG4vLyAgICAgICAgICAgc3Ryb2tlOiAjZmZiMTM4O1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgfVxyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgICZfZm9vdGVyIHtcclxuLy8gICAgICAgZGlzcGxheTogZmxleDtcclxuLy8gICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4vLyAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4vLyAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgZGFya2dyZXk7XHJcblxyXG4vLyBzdmcge1xyXG4vLyAgIGZpbGw6ICM2NzY3Njc7XHJcbi8vIH1cclxuXHJcbi8vICAgICAgIC5idG4tdW5kZXJsaW5lIHtcclxuLy8gICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4vLyAgICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbi8vICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuXHJcbi8vICAgICAgICAgJjpiZWZvcmUge1xyXG4vLyAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICAmX2FkZCB7XHJcbi8vICAgICAgIGJvcmRlcjogbm9uZTtcclxuLy8gICAgICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XHJcbi8vICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuLy8gICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgICZfdmlldyB7fVxyXG4vLyAgIH1cclxuLy8gfVxyXG5mb3JtIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgbWluLWhlaWdodDogMzAwcHg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJveC1zaGFkb3c6IDFweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIHRyYW5zaXRpb246IDAuMnM7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogNHB4IDhweCAxNnB4IHJnYmEoOCwgNywgNywgMC4yKTtcclxuICB9XHJcblxyXG4gICZfX2ltYWdlX193cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGltZyB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHRyYW5zaXRpb246IDAuMnM7XHJcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjJzO1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fYm90dG9tIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleDogMSAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG5cclxuICAgICZfX3R5cGUge1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBjb2xvcjogZGFya2dyZXk7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3ByaWNlIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICBjb2xvcjogIzYwNjA2MDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xyXG4gICAgICBjb2xvcjogIzQxNDE0MTtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICBoZWlnaHQ6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7XHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAjZmZiMTM4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcmF0aW5nIHtcclxuICAgICAgc3ZnIHtcclxuICAgICAgICB3aWR0aDogOTZweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcblxyXG4gICAgICAgIHBhdGgge1xyXG4gICAgICAgICAgZmlsbDogI2ZmYjEzODtcclxuICAgICAgICAgIHN0cm9rZTogI2ZmYjEzODtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5wcm9kdWN0LWNhcmRfX2NvbnRlbnRfYWRkIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgY29sb3I6ICM1N2ExNDY7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzU3YTE0NjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IDAuMnM7XHJcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZiMTM4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZiMTM4O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbn0iXX0= */
