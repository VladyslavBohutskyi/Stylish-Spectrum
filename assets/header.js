"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_toPropertyKey(r.key),r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _createSuper(n){var r=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(n);return _possibleConstructorReturn(this,r?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _wrapNativeSuper(e){var n="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(e){if(null===e||!_isNativeFunction(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(t,e)})(e)}function _construct(e,t,n){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);t=new(Function.bind.apply(e,r));return n&&_setPrototypeOf(t,n.prototype),t}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _isNativeFunction(e){return-1!==Function.toString.call(e).indexOf("[native code]")}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}!function r(o,i,u){function c(t,e){if(!i[t]){if(!o[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(a)return a(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}n=i[t]={exports:{}},o[t][0].call(n.exports,function(e){return c(o[t][1][e]||e)},n,n.exports,r,o,i,u)}return i[t].exports}for(var a="function"==typeof require&&require,e=0;e<u.length;e++)c(u[e]);return c}({1:[function(e,t,n){customElements.get("s-header")||customElements.define("s-header",function(){_inherits(t,_wrapNativeSuper(HTMLElement));var e=_createSuper(t);function t(){return _classCallCheck(this,t),e.call(this)}return _createClass(t,[{key:"connectedCallback",value:function(){var t=this;this.megaMenus=Array.from(this.querySelectorAll(".s-mega-menu")),this.menuItems=this.querySelectorAll(".s-header__menu_item"),this.menuItems.forEach(function(e){t.addClassParentMenu(e),t.openMegaMenuMobile(e),t.openMegaMenuDesktop(e),t.closeMegaMenuDesktop(e)}),this.toggleMenuMobile(),this.closeMegaMenuMobile()}},{key:"addClassParentMenu",value:function(t){this.megaMenus.map(function(e){t.getElementsByTagName("a")[0].innerHTML==e.getAttribute("data-parent-menu")&&t.classList.add("s-header__menu_item--parent")})}},{key:"openMegaMenuDesktop",value:function(e){var n=this;e.addEventListener("mouseover",function(t){n.megaMenus.map(function(e){t.target.innerHTML==e.getAttribute("data-parent-menu")&&e.classList.add("active")})})}},{key:"closeMegaMenuDesktop",value:function(e){var n=this;e.addEventListener("mouseout",function(t){n.megaMenus.map(function(e){t.target.innerHTML==e.getAttribute("data-parent-menu")&&e.classList.remove("active")})})}},{key:"toggleMenuMobile",value:function(){var e=this;this.querySelector(".s-header__menu_btn").addEventListener("click",function(){return document.querySelector(".body_overlay").classList.toggle("active"),e.querySelector(".s-header").classList.toggle("s-header--menu-active"),document.querySelector("body").classList.toggle("hidden"),e.querySelector(".s-header__menu").classList.remove("hide"),e.megaMenus.map(function(e){e.classList.remove("active")})})}},{key:"openMegaMenuMobile",value:function(e){var n=this;e.querySelector(".s-header__menu_item_arrow").addEventListener("click",function(t){n.megaMenus.map(function(e){t.target.getAttribute("data-menu-name")==e.getAttribute("data-parent-menu")&&(e.classList.add("active"),n.querySelector(".s-header__menu").classList.add("hide"))})})}},{key:"closeMegaMenuMobile",value:function(){var t=this;this.querySelectorAll(".s-mega-menu__close").forEach(function(e){e.addEventListener("click",function(e){t.querySelector(".s-header__menu").classList.remove("hide"),t.megaMenus.map(function(e){e.classList.remove("active")})})})}}]),t}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvaGVhZGVyLmpzIiwiaGVhZGVyLmpzIl0sIm5hbWVzIjpbInIiLCJlIiwibiIsInQiLCJvIiwiaSIsImYiLCJjIiwicmVxdWlyZSIsInUiLCJhIiwiRXJyb3IiLCJjb2RlIiwicCIsImV4cG9ydHMiLCJjYWxsIiwibGVuZ3RoIiwiMSIsIm1vZHVsZSIsImN1c3RvbUVsZW1lbnRzIiwiZ2V0IiwiZGVmaW5lIiwiX2luaGVyaXRzIiwiU0hlYWRlciIsIl93cmFwTmF0aXZlU3VwZXIiLCJIVE1MRWxlbWVudCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl90aGlzIiwibWVnYU1lbnVzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIm1lbnVJdGVtcyIsImZvckVhY2giLCJtZW51SXRlbSIsImFkZENsYXNzUGFyZW50TWVudSIsIm9wZW5NZWdhTWVudU1vYmlsZSIsIm9wZW5NZWdhTWVudURlc2t0b3AiLCJjbG9zZU1lZ2FNZW51RGVza3RvcCIsInRvZ2dsZU1lbnVNb2JpbGUiLCJjbG9zZU1lZ2FNZW51TW9iaWxlIiwibWFwIiwibWVnYU1lbnVJdGVtIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpbm5lckhUTUwiLCJnZXRBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJfdGhpczIiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiX3RoaXMzIiwicmVtb3ZlIiwiX3RoaXM0IiwicXVlcnlTZWxlY3RvciIsImRvY3VtZW50IiwidG9nZ2xlIiwiX3RoaXM1IiwiX3RoaXM2IiwiY2xvc2VNZWdhTWVudSJdLCJtYXBwaW5ncyI6InEzR0FBQSxDQUFBLFNBQUFBLEVBQUFDLEVBQUFDLEVBQUFDLEdBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FBQSxHQUFBLENBQUFK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QyxFQUFFIiwiZmlsZSI6ImhlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpZiAoIWN1c3RvbUVsZW1lbnRzLmdldCgncy1oZWFkZXInKSkge1xyXG5cclxuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ3MtaGVhZGVyJywgY2xhc3MgU0hlYWRlciBleHRlbmRzIEhUTUxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xyXG4gICAgICB0aGlzLm1lZ2FNZW51cyA9IEFycmF5LmZyb20odGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucy1tZWdhLW1lbnUnKSlcclxuICAgICAgdGhpcy5tZW51SXRlbXMgPSB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zLWhlYWRlcl9fbWVudV9pdGVtJylcclxuICAgICAgdGhpcy5tZW51SXRlbXMuZm9yRWFjaCgobWVudUl0ZW0pID0+IHtcclxuICAgICAgICB0aGlzLmFkZENsYXNzUGFyZW50TWVudShtZW51SXRlbSlcclxuICAgICAgICB0aGlzLm9wZW5NZWdhTWVudU1vYmlsZShtZW51SXRlbSlcclxuICAgICAgICB0aGlzLm9wZW5NZWdhTWVudURlc2t0b3AobWVudUl0ZW0pXHJcbiAgICAgICAgdGhpcy5jbG9zZU1lZ2FNZW51RGVza3RvcChtZW51SXRlbSlcclxuICAgICAgfSlcclxuICAgICAgdGhpcy50b2dnbGVNZW51TW9iaWxlKClcclxuICAgICAgdGhpcy5jbG9zZU1lZ2FNZW51TW9iaWxlKClcclxuICAgIH1cclxuXHJcbiAgICBhZGRDbGFzc1BhcmVudE1lbnUobWVudUl0ZW0pIHtcclxuICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICBtZW51SXRlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpWzBdLmlubmVySFRNTCA9PSBtZWdhTWVudUl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXBhcmVudC1tZW51JylcclxuICAgICAgICAgID8gbWVudUl0ZW0uY2xhc3NMaXN0LmFkZCgncy1oZWFkZXJfX21lbnVfaXRlbS0tcGFyZW50JylcclxuICAgICAgICAgIDogZmFsc2VcclxuICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBvcGVuTWVnYU1lbnVEZXNrdG9wKG1lbnVJdGVtKSB7XHJcbiAgICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICAgIGUudGFyZ2V0LmlubmVySFRNTCA9PSBtZWdhTWVudUl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXBhcmVudC1tZW51JylcclxuICAgICAgICAgICAgPyBtZWdhTWVudUl0ZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcclxuICAgICAgICAgICAgOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VNZWdhTWVudURlc2t0b3AobWVudUl0ZW0pIHtcclxuICAgICAgbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMubWVnYU1lbnVzLm1hcCgobWVnYU1lbnVJdGVtKSA9PiB7XHJcbiAgICAgICAgICBlLnRhcmdldC5pbm5lckhUTUwgPT0gbWVnYU1lbnVJdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1wYXJlbnQtbWVudScpXHJcbiAgICAgICAgICAgID8gbWVnYU1lbnVJdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIDogZmFsc2VcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZU1lbnVNb2JpbGUoKSB7XHJcbiAgICAgIHRoaXMucXVlcnlTZWxlY3RvcignLnMtaGVhZGVyX19tZW51X2J0bicpLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgXCJjbGlja1wiLCAoKSA9PiAoXHJcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYm9keV9vdmVybGF5JykuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyksXHJcbiAgICAgICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLWhlYWRlcicpLmNsYXNzTGlzdC50b2dnbGUoJ3MtaGVhZGVyLS1tZW51LWFjdGl2ZScpLFxyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicpLFxyXG4gICAgICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yKCcucy1oZWFkZXJfX21lbnUnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyksXHJcbiAgICAgICAgICB0aGlzLm1lZ2FNZW51cy5tYXAoKGUpID0+IHtcclxuICAgICAgICAgICAgZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICApXHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICBvcGVuTWVnYU1lbnVNb2JpbGUobWVudUl0ZW0pIHtcclxuICAgICAgbWVudUl0ZW0ucXVlcnlTZWxlY3RvcignLnMtaGVhZGVyX19tZW51X2l0ZW1fYXJyb3cnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWVudS1uYW1lJykgPT0gbWVnYU1lbnVJdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1wYXJlbnQtbWVudScpKSB7XHJcbiAgICAgICAgICAgIG1lZ2FNZW51SXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLWhlYWRlcl9fbWVudScpLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VNZWdhTWVudU1vYmlsZSgpIHtcclxuICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucy1tZWdhLW1lbnVfX2Nsb3NlJykuZm9yRWFjaCgoY2xvc2VNZWdhTWVudSkgPT4ge1xyXG4gICAgICAgIGNsb3NlTWVnYU1lbnUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yKCcucy1oZWFkZXJfX21lbnUnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJylcclxuICAgICAgICAgIHRoaXMubWVnYU1lbnVzLm1hcCgoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gIH1cclxuICApXHJcbn1cclxuIiwiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG5pZiAoIWN1c3RvbUVsZW1lbnRzLmdldCgncy1oZWFkZXInKSkge1xyXG5cclxuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ3MtaGVhZGVyJywgY2xhc3MgU0hlYWRlciBleHRlbmRzIEhUTUxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xyXG4gICAgICB0aGlzLm1lZ2FNZW51cyA9IEFycmF5LmZyb20odGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucy1tZWdhLW1lbnUnKSlcclxuICAgICAgdGhpcy5tZW51SXRlbXMgPSB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zLWhlYWRlcl9fbWVudV9pdGVtJylcclxuICAgICAgdGhpcy5tZW51SXRlbXMuZm9yRWFjaCgobWVudUl0ZW0pID0+IHtcclxuICAgICAgICB0aGlzLmFkZENsYXNzUGFyZW50TWVudShtZW51SXRlbSlcclxuICAgICAgICB0aGlzLm9wZW5NZWdhTWVudU1vYmlsZShtZW51SXRlbSlcclxuICAgICAgICB0aGlzLm9wZW5NZWdhTWVudURlc2t0b3AobWVudUl0ZW0pXHJcbiAgICAgICAgdGhpcy5jbG9zZU1lZ2FNZW51RGVza3RvcChtZW51SXRlbSlcclxuICAgICAgfSlcclxuICAgICAgdGhpcy50b2dnbGVNZW51TW9iaWxlKClcclxuICAgICAgdGhpcy5jbG9zZU1lZ2FNZW51TW9iaWxlKClcclxuICAgIH1cclxuXHJcbiAgICBhZGRDbGFzc1BhcmVudE1lbnUobWVudUl0ZW0pIHtcclxuICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICBtZW51SXRlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpWzBdLmlubmVySFRNTCA9PSBtZWdhTWVudUl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXBhcmVudC1tZW51JylcclxuICAgICAgICAgID8gbWVudUl0ZW0uY2xhc3NMaXN0LmFkZCgncy1oZWFkZXJfX21lbnVfaXRlbS0tcGFyZW50JylcclxuICAgICAgICAgIDogZmFsc2VcclxuICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBvcGVuTWVnYU1lbnVEZXNrdG9wKG1lbnVJdGVtKSB7XHJcbiAgICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICAgIGUudGFyZ2V0LmlubmVySFRNTCA9PSBtZWdhTWVudUl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXBhcmVudC1tZW51JylcclxuICAgICAgICAgICAgPyBtZWdhTWVudUl0ZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcclxuICAgICAgICAgICAgOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VNZWdhTWVudURlc2t0b3AobWVudUl0ZW0pIHtcclxuICAgICAgbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMubWVnYU1lbnVzLm1hcCgobWVnYU1lbnVJdGVtKSA9PiB7XHJcbiAgICAgICAgICBlLnRhcmdldC5pbm5lckhUTUwgPT0gbWVnYU1lbnVJdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1wYXJlbnQtbWVudScpXHJcbiAgICAgICAgICAgID8gbWVnYU1lbnVJdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIDogZmFsc2VcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZU1lbnVNb2JpbGUoKSB7XHJcbiAgICAgIHRoaXMucXVlcnlTZWxlY3RvcignLnMtaGVhZGVyX19tZW51X2J0bicpLmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgXCJjbGlja1wiLCAoKSA9PiAoXHJcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYm9keV9vdmVybGF5JykuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyksXHJcbiAgICAgICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLWhlYWRlcicpLmNsYXNzTGlzdC50b2dnbGUoJ3MtaGVhZGVyLS1tZW51LWFjdGl2ZScpLFxyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicpLFxyXG4gICAgICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yKCcucy1oZWFkZXJfX21lbnUnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyksXHJcbiAgICAgICAgICB0aGlzLm1lZ2FNZW51cy5tYXAoKGUpID0+IHtcclxuICAgICAgICAgICAgZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICApXHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICBvcGVuTWVnYU1lbnVNb2JpbGUobWVudUl0ZW0pIHtcclxuICAgICAgbWVudUl0ZW0ucXVlcnlTZWxlY3RvcignLnMtaGVhZGVyX19tZW51X2l0ZW1fYXJyb3cnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5tZWdhTWVudXMubWFwKChtZWdhTWVudUl0ZW0pID0+IHtcclxuICAgICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbWVudS1uYW1lJykgPT0gbWVnYU1lbnVJdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1wYXJlbnQtbWVudScpKSB7XHJcbiAgICAgICAgICAgIG1lZ2FNZW51SXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLWhlYWRlcl9fbWVudScpLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VNZWdhTWVudU1vYmlsZSgpIHtcclxuICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucy1tZWdhLW1lbnVfX2Nsb3NlJykuZm9yRWFjaCgoY2xvc2VNZWdhTWVudSkgPT4ge1xyXG4gICAgICAgIGNsb3NlTWVnYU1lbnUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5xdWVyeVNlbGVjdG9yKCcucy1oZWFkZXJfX21lbnUnKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJylcclxuICAgICAgICAgIHRoaXMubWVnYU1lbnVzLm1hcCgoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gIH1cclxuICApXHJcbn1cclxuXG59LHt9XX0se30sWzFdKVxuXG4iXX0=
