"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _wrapNativeSuper(e){var r="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(e){if(null===e||!_isNativeFunction(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,t)}function t(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(t,e)})(e)}function _construct(e,t,r){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(e,t,r){var n=[null];n.push.apply(n,t);t=new(Function.bind.apply(e,n));return r&&_setPrototypeOf(t,r.prototype),t}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _isNativeFunction(e){return-1!==Function.toString.call(e).indexOf("[native code]")}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}!function n(o,i,c){function u(t,e){if(!i[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(l)return l(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=i[t]={exports:{}},o[t][0].call(r.exports,function(e){return u(o[t][1][e]||e)},r,r.exports,n,o,i,c)}return i[t].exports}for(var l="function"==typeof require&&require,e=0;e<c.length;e++)u(c[e]);return u}({1:[function(e,t,r){customElements.get("main-filters")||customElements.define("main-filters",function(){_inherits(r,_wrapNativeSuper(HTMLElement));var t=_createSuper(r);function r(){var e;return _classCallCheck(this,r),_defineProperty(_assertThisInitialized(e=t.call(this)),"searchParams",new URLSearchParams(window.location.search)),e}return _createClass(r,[{key:"connectedCallback",value:function(){this.addListeners(),this.addClassToColorFilter()}},{key:"addClassToColorFilter",value:function(){Array.from(this.querySelectorAll(".main-filters__filters__item__list")).forEach(function(e){"Color"==e.parentElement.outerText&&e.classList.add("main-filters__filters__item__list__color")})}},{key:"addListeners",value:function(){var r=this;this.querySelector("#sort-by").addEventListener("change",function(){return r.sortBy()}),this.querySelectorAll(".main-filters__filters__item").forEach(function(e){return e.addEventListener("click",function(){return r.openFilter(e)})}),document.addEventListener("click",function(e){e.target.closest(".main-filters__filters__item")||e.target.closest(".main-filters__filters__item__dropdown")||r.querySelectorAll(".main-filters__filters__item").forEach(function(e){return e.classList.remove("active")})}),this.querySelectorAll(".main-filters__filters__item__list__add_filter").forEach(function(t){return t.addEventListener("click",function(e){return r.updatePage(t,e)})})}},{key:"sortBy",value:function(){this.searchParams.set("sort_by",this.querySelector("#sort-by").value),window.location.search=this.searchParams.toString()}},{key:"openFilter",value:function(e){this.querySelectorAll(".main-filters__filters__item").forEach(function(e){return e.classList.remove("active")}),e.classList.add("active")}},{key:"updatePage",value:function(e,t){var n=this,o=(t.preventDefault(),e.dataset.filterValue);fetch(window.theme.shopUrl+o).then(function(e){return e.text()}).then(function(e){history.replaceState(null,null,window.theme.shopUrl+o),n.searchParams=new URLSearchParams(window.location.search);var r=(new DOMParser).parseFromString(e,"text/html");document.querySelector(".main-collection__products").innerHTML=r.querySelector(".main-collection__products").innerHTML,n.querySelectorAll(".main-filters__filters__item__list").forEach(function(e,t){e.innerHTML=r.querySelectorAll(".main-filters__filters__item__list")[t].innerHTML}),n.querySelector(".main-filters__checked").innerHTML=r.querySelector(".main-filters__checked").innerHTML,n.addListeners()})}}]),r}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
